{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "description": "API for managing resources",
        "version": "1.0.0"
    },
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Получить список корневых категорий",
                "description": "Возвращает список всех корневых категорий с их подкатегориями.",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "Список категорий",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Создать новую категорию",
                "description": "Создает новую категорию и, при необходимости, привязывает её к родительской категории.",
                "operationId": "createCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Category"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Категория успешно создана",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully."
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "New Category"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "new-category"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-08T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-08T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации данных",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{category}": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Обновить категорию",
                "description": "Обновляет существующую категорию, включая её имя и родительскую категорию.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID категории",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Category"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Категория успешно обновлена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully."
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Category"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "updated-category"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-08T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-08T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации данных",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Удалить категорию",
                "description": "Удаляет категорию по её ID.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID категории для удаления",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Категория успешно удалена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get all clients",
                "operationId": "getClients",
                "responses": {
                    "200": {
                        "description": "List of clients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Client"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "operationId": "storeClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "First name of the client",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "last_name": {
                                        "description": "Last name of the client",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "description": "Email address of the client",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "description": "Password for the client account",
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client successfully created"
                                        },
                                        "client": {
                                            "$ref": "#/components/schemas/Client"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, validation failed"
                    }
                }
            }
        },
        "/clients/{client}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get a specific client by ID",
                "operationId": "showClient",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "description": "ID of the client to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update a specific client",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "description": "ID of the client to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a specific client",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "description": "ID of the client to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "400": {
                        "description": "Error deleting client"
                    }
                }
            }
        },
        "/client-levels": {
            "get": {
                "tags": [
                    "ClientLevels"
                ],
                "summary": "Get all client levels",
                "description": "Returns a list of all client levels",
                "operationId": "getClientLevels",
                "responses": {
                    "200": {
                        "description": "List of client levels",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClientLevel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            },
            "post": {
                "tags": [
                    "ClientLevels"
                ],
                "summary": "Create a new client level",
                "description": "Creates a new client level based on the provided data",
                "operationId": "createClientLevel",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "threshold",
                                    "calculation_type",
                                    "discount_percentage"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the client level",
                                        "type": "string"
                                    },
                                    "threshold": {
                                        "description": "Threshold for the client level",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "calculation_type": {
                                        "description": "Type of calculation for the client level",
                                        "type": "string",
                                        "enum": [
                                            "order_count",
                                            "order_sum"
                                        ]
                                    },
                                    "discount_percentage": {
                                        "description": "Discount percentage for the client level",
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client level successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientLevel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    }
                }
            }
        },
        "/client-levels/{clientLevel}": {
            "put": {
                "tags": [
                    "ClientLevels"
                ],
                "summary": "Update a client level",
                "description": "Updates an existing client level based on the provided data",
                "operationId": "updateClientLevel",
                "parameters": [
                    {
                        "name": "clientLevel",
                        "in": "path",
                        "description": "ID of the client level to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "threshold",
                                    "calculation_type",
                                    "discount_percentage"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the client level",
                                        "type": "string"
                                    },
                                    "threshold": {
                                        "description": "Threshold for the client level",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "calculation_type": {
                                        "description": "Type of calculation for the client level",
                                        "type": "string",
                                        "enum": [
                                            "order_count",
                                            "order_sum"
                                        ]
                                    },
                                    "discount_percentage": {
                                        "description": "Discount percentage for the client level",
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client level successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientLevel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ClientLevels"
                ],
                "summary": "Delete a client level",
                "description": "Deletes a client level by its ID",
                "operationId": "deleteClientLevel",
                "parameters": [
                    {
                        "name": "clientLevel",
                        "in": "path",
                        "description": "ID of the client level to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client level successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client level deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client level not found"
                    }
                }
            }
        },
        "/cost-categories": {
            "get": {
                "tags": [
                    "Cost Categories"
                ],
                "summary": "Get list of active cost categories",
                "operationId": "bb4ce6b949fd5b6381062dee1d0e2104",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CostCategory"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/materials": {
            "get": {
                "tags": [
                    "Materials"
                ],
                "summary": "Получить список материалов",
                "description": "Возвращает список материалов с их единицами измерения и балансом на складе",
                "operationId": "getMaterials",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Номер страницы для пагинации",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ со списком материалов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Material"
                                            }
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://example.com/api/materials?page=2",
                                            "nullable": true
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Materials"
                ],
                "summary": "Создать новый материал",
                "description": "Создаёт новый материал и возвращает его данные",
                "operationId": "createMaterial",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "unit_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Steel Pipe"
                                    },
                                    "unit_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Материал успешно создан",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Material created successfully"
                                        },
                                        "material": {
                                            "$ref": "#/components/schemas/Material"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "unit_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected unit_id is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/materials/{material}": {
            "get": {
                "tags": [
                    "Materials"
                ],
                "summary": "Получить материал по ID",
                "description": "Возвращает данные конкретного материала",
                "operationId": "getMaterialById",
                "parameters": [
                    {
                        "name": "material",
                        "in": "path",
                        "description": "ID материала",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с данными материала",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Material"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Материал не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Material not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Materials"
                ],
                "summary": "Обновить материал",
                "description": "Обновляет информацию о материале по ID",
                "operationId": "updateMaterial",
                "parameters": [
                    {
                        "name": "material",
                        "in": "path",
                        "description": "ID материала",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "unit_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Steel Rod"
                                    },
                                    "unit_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Материал успешно обновлён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Material updated successfully"
                                        },
                                        "material": {
                                            "$ref": "#/components/schemas/Material"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Материал не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Material not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Materials"
                ],
                "summary": "Удалить материал",
                "description": "Удаляет материал по ID, если у него нет остатков на складе",
                "operationId": "deleteMaterial",
                "parameters": [
                    {
                        "name": "material",
                        "in": "path",
                        "description": "ID материала",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Материал успешно удалён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Material deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Невозможно удалить материал с существующими остатками",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cannot delete material with existing inventory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Материал не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Material not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Получить список продуктов",
                "description": "Возвращает список продуктов с фильтрацией по названию, описанию и категориям.",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Поиск по названию, описанию или категории",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Фильтр по категории (ID категории)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список продуктов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Product Name"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Product Description"
                                                    },
                                                    "categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Category Name"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "options": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "variants": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Создать новый продукт",
                "description": "Создает новый продукт и привязывает его к категориям.",
                "operationId": "createProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "categories"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Product"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Product description",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "simple",
                                            "manufactured",
                                            "composite"
                                        ],
                                        "example": "simple"
                                    },
                                    "default_unit_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "has_variants": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "allow_preorder": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "after_purchase_processing_time": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Продукт создан успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        },
                                        "product": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "New Product"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "new-product"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации"
                    }
                }
            }
        },
        "/api/products/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Получить информацию о продукте",
                "description": "Возвращает детальную информацию о продукте с категориями, вариантами и опциями.",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID продукта",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация о продукте",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Product Name"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Product Description"
                                        },
                                        "defaultUnit": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Unit Name"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Category Name"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "options": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Option Name"
                                                    },
                                                    "values": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "example": "Red"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "variants": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "optionValues": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "example": "Large"
                                                                },
                                                                "option": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "Size"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "images": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "url": {
                                                                    "type": "string",
                                                                    "example": "https://example.com/image.jpg"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "unit": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Kilogram"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Продукт не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Обновить продукт",
                "description": "Обновляет существующий продукт по его ID.",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID продукта",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Product"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "simple",
                                            "manufactured",
                                            "composite"
                                        ],
                                        "example": "manufactured"
                                    },
                                    "default_unit_id": {
                                        "type": "integer",
                                        "example": 2,
                                        "nullable": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "has_variants": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_preorder": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "after_purchase_processing_time": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Продукт успешно обновлён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully"
                                        },
                                        "product": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Product"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "updated-product"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Продукт не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Удалить продукт",
                "description": "Удаляет продукт по его ID.",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID продукта",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Продукт успешно удалён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Продукт не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{product}/generate-variants": {
            "post": {
                "tags": [
                    "Product Variants"
                ],
                "summary": "Generate multiple variants for a product",
                "operationId": "fcb3f0890195b71e789fbcb5bbc2a782",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "variants"
                                ],
                                "properties": {
                                    "variants": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "name",
                                                "sku",
                                                "price",
                                                "option_values"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Variant 1"
                                                },
                                                "sku": {
                                                    "type": "string",
                                                    "example": "variant-1-unique-sku"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 19.99
                                                },
                                                "option_values": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Variants generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Variants generated successfully"
                                        },
                                        "variants": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Variant 1"
                                                    },
                                                    "sku": {
                                                        "type": "string",
                                                        "example": "variant-1-unique-sku"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 19.99
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "simple"
                                                    },
                                                    "unit_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "option_values": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Option Value 1"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "variants.0.sku": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The variants.0.sku has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to generate variants"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{product}/variants": {
            "post": {
                "tags": [
                    "Product Variants"
                ],
                "summary": "Create a new product variant",
                "operationId": "8d8d98fd6736b71dbda0aa287fe85ce0",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "sku",
                                    "price",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Variant 1"
                                    },
                                    "sku": {
                                        "type": "string",
                                        "example": "variant-1-unique-sku"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 19.99
                                    },
                                    "additional_cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2.5
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "simple",
                                            "manufactured",
                                            "composite"
                                        ],
                                        "example": "simple"
                                    },
                                    "unit_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "option_values": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product variant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product variant created successfully"
                                        },
                                        "variant": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Variant 1"
                                                },
                                                "sku": {
                                                    "type": "string",
                                                    "example": "variant-1-unique-sku"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 19.99
                                                },
                                                "additional_cost": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 2.5
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "simple"
                                                },
                                                "unit_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "option_values": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Option Value 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "sku": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The sku has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create product variant"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/variants/{variant}": {
            "put": {
                "tags": [
                    "Product Variants"
                ],
                "summary": "Update a product variant",
                "operationId": "69e76700e327cb4aec61829dfb18585e",
                "parameters": [
                    {
                        "name": "variant",
                        "in": "path",
                        "description": "ID of the variant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "stock"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Variant Name"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.99
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Variant updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Variant updated successfully"
                                        },
                                        "variant": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Variant Name"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 29.99
                                                },
                                                "stock": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-10T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-10T12:05:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The price must be at least 0."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{product}/variants/{variant}": {
            "delete": {
                "tags": [
                    "Product Variants"
                ],
                "summary": "Delete a product variant",
                "operationId": "6108e12e2d7fad66c1da8919131291bd",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "variant",
                        "in": "path",
                        "description": "ID of the variant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product variant deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product variant deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete product variant"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/production": {
            "get": {
                "tags": [
                    "Production"
                ],
                "summary": "Get all production batches",
                "operationId": "getProductionBatches",
                "responses": {
                    "200": {
                        "description": "List of production batches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductionBatch"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/production/batches": {
            "post": {
                "tags": [
                    "Production"
                ],
                "summary": "Создать новую производственную партию",
                "operationId": "createProductionBatch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "planned_start_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "notes": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Производственная партия создана",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductionBatch"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ввод"
                    }
                }
            }
        },
        "/production/batches/{batch}/start": {
            "post": {
                "tags": [
                    "Production"
                ],
                "summary": "Запуск производственной партии",
                "description": "Метод для запуска производственной партии по ID.",
                "operationId": "startProductionBatch",
                "parameters": [
                    {
                        "name": "batch",
                        "in": "path",
                        "description": "ID производственной партии",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Производственная партия успешно запущена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Производственная партия запущена"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка запуска производственной партии",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Ошибка: Невозможно запустить партию"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/promo-codes": {
            "get": {
                "tags": [
                    "Promo Codes"
                ],
                "summary": "Получить список промокодов",
                "operationId": "a8b5002368297050fae9c04c9a73c47e",
                "responses": {
                    "200": {
                        "description": "Список промокодов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "code": {
                                                "type": "string",
                                                "example": "DISCOUNT10"
                                            },
                                            "discount": {
                                                "type": "number",
                                                "example": 10
                                            },
                                            "expires_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-12-31T23:59:59Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Promo Codes"
                ],
                "summary": "Создать промокод",
                "operationId": "181d215156336487beac00b40f5345e8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "discount_amount",
                                    "discount_type"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "DISCOUNT20"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "example": 20
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed"
                                        ],
                                        "example": "percentage"
                                    },
                                    "starts_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01"
                                    },
                                    "expires_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "max_uses": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Промокод успешно создан",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promo code created successfully."
                                        },
                                        "promo_code": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "DISCOUNT20"
                                                },
                                                "discount_amount": {
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "discount_type": {
                                                    "type": "string",
                                                    "example": "percentage"
                                                },
                                                "starts_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-01-01"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-12-31"
                                                },
                                                "max_uses": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/promo-codes/{id}": {
            "put": {
                "tags": [
                    "Promo Codes"
                ],
                "summary": "Обновить промокод",
                "operationId": "163896574eab053abed61e78ca029cba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID промокода",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "discount_amount",
                                    "discount_type"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "DISCOUNT30"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "example": 30
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed"
                                        ],
                                        "example": "fixed"
                                    },
                                    "starts_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-02-01"
                                    },
                                    "expires_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "max_uses": {
                                        "type": "integer",
                                        "example": 150
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Промокод успешно обновлен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promo code updated successfully."
                                        },
                                        "promo_code": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "DISCOUNT30"
                                                },
                                                "discount_amount": {
                                                    "type": "number",
                                                    "example": 30
                                                },
                                                "discount_type": {
                                                    "type": "string",
                                                    "example": "fixed"
                                                },
                                                "starts_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-02-01"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-12-31"
                                                },
                                                "max_uses": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Promo Codes"
                ],
                "summary": "Удалить промокод",
                "operationId": "020b32ce3e6851f0eb9975340a500ab8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID промокода",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Промокод успешно удален",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promo code deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Промокод не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promo code not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/promo-codes/{id}/usage": {
            "get": {
                "tags": [
                    "Promo Codes"
                ],
                "summary": "Получить статистику использования промокода",
                "operationId": "ab890b4297eb77eabc86e472a831bfed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID промокода",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация об использовании промокода",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "DISCOUNT2024"
                                        },
                                        "total_uses": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "usages": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "order": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1001
                                                            },
                                                            "order_number": {
                                                                "type": "string",
                                                                "example": "ORD-20240308-XYZ"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "client": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 50
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Иван Иванов"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "discount_amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 500
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-03-08T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Промокод не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promo code not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/recipes": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get a list of all recipes with related data",
                "description": "Fetches all recipes with their related products, selected variants, items, and other associated data.",
                "operationId": "getRecipes",
                "responses": {
                    "200": {
                        "description": "List of recipes successfully fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Recipe"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Create a new recipe",
                "description": "Creates a new recipe with related items, products, and cost rates.",
                "operationId": "createRecipe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "output_quantity",
                                    "output_unit_id",
                                    "items",
                                    "products",
                                    "cost_rates"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the recipe",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the recipe",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "output_quantity": {
                                        "description": "Quantity produced by the recipe",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "output_unit_id": {
                                        "description": "ID of the unit used for output quantity",
                                        "type": "integer"
                                    },
                                    "instructions": {
                                        "description": "Instructions for making the recipe",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "production_time": {
                                        "description": "Time required to produce the recipe",
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "is_active": {
                                        "description": "Whether the recipe is active",
                                        "type": "boolean"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "component_type",
                                                "component_id",
                                                "quantity",
                                                "unit_id"
                                            ],
                                            "properties": {
                                                "component_type": {
                                                    "description": "The type of component (Material or Product)",
                                                    "type": "string",
                                                    "enum": [
                                                        "Material",
                                                        "Product"
                                                    ]
                                                },
                                                "component_id": {
                                                    "description": "The ID of the component",
                                                    "type": "integer"
                                                },
                                                "quantity": {
                                                    "description": "Quantity of the component",
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "unit_id": {
                                                    "description": "Unit ID for the component",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "product_id"
                                            ],
                                            "properties": {
                                                "product_id": {
                                                    "description": "ID of the product",
                                                    "type": "integer"
                                                },
                                                "variant_id": {
                                                    "description": "ID of the product variant",
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "is_default": {
                                                    "description": "Whether the product is the default",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "cost_rates": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "cost_category_id",
                                                "rate_per_unit",
                                                "fixed_rate"
                                            ],
                                            "properties": {
                                                "cost_category_id": {
                                                    "description": "ID of the cost category",
                                                    "type": "integer"
                                                },
                                                "rate_per_unit": {
                                                    "description": "Cost rate per unit",
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "fixed_rate": {
                                                    "description": "Fixed cost rate",
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Recipe created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Recipe"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/recipes/{recipe}": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get a specific recipe",
                "description": "Fetches details of a specific recipe by its ID, including related items and units.",
                "operationId": "getRecipe",
                "parameters": [
                    {
                        "name": "recipe",
                        "in": "path",
                        "description": "ID of the recipe to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Recipe"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Update a specific recipe",
                "description": "Updates the details of a specific recipe including items, products, and cost rates.",
                "operationId": "updateRecipe",
                "parameters": [
                    {
                        "name": "recipe",
                        "in": "path",
                        "description": "ID of the recipe to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "output_quantity": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0.001
                                    },
                                    "output_unit_id": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "instructions": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "production_time": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "nullable": true
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "component_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Material",
                                                        "Product"
                                                    ]
                                                },
                                                "component_id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "quantity": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "minimum": 0.001
                                                },
                                                "unit_id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "variant_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "nullable": true
                                                },
                                                "is_default": {
                                                    "type": "boolean",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "cost_rates": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "cost_category_id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "rate_per_unit": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "minimum": 0
                                                },
                                                "fixed_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "minimum": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Recipe updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Recipe"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Recipe not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Delete a specific recipe",
                "description": "Deletes a specific recipe, ensuring it is not used in any production batches and not the only recipe for any product.",
                "operationId": "deleteRecipe",
                "parameters": [
                    {
                        "name": "recipe",
                        "in": "path",
                        "description": "ID of the recipe to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe successfully deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation or business logic error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cannot delete recipe used in production batches"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Recipe not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete recipe: Some error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/units": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Получить все единицы",
                "description": "Получает все единицы из базы данных",
                "operationId": "getAllUnits",
                "responses": {
                    "200": {
                        "description": "Список всех единиц",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user",
                "description": "Handle an incoming authentication request.",
                "operationId": "9741d6d3e9224a10f68a794f84084c03",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authenticated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authenticated successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdef123456"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "description": "Destroy an authenticated session.",
                "operationId": "a7983456e68fec2e2a40386c8cc7bbad",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/confirm-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm user password",
                "description": "Confirm the user's password.",
                "operationId": "3322386eb8ed38b986d820815729c0eb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "your-password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password confirmed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "password": [
                                                    "The password is incorrect."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/email/verification-notification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send email verification notification",
                "description": "Send a new email verification notification.",
                "operationId": "8e0252d8613fff2b0d577b8245f2bd3b",
                "responses": {
                    "200": {
                        "description": "Verification link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "verification-link-sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verify-email": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check if email is verified",
                "description": "Display the email verification prompt.",
                "operationId": "53a46e43ecbb3cceb01b950da505271d",
                "responses": {
                    "200": {
                        "description": "Email is verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email is already verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Email is not verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please verify your email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Handle an incoming new password request.",
                "operationId": "4fc22c2654765d456fd1ff0b8692427b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "your-reset-token"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new-password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new-password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Your password has been reset."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update user password",
                "description": "Update the user's password.",
                "operationId": "86c26ed70ac350b54c868fe97bdc9d00",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "current-password"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new-password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new-password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "current_password": [
                                                    "The current password is incorrect."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request a password reset link",
                "description": "Handle an incoming password reset link request.",
                "operationId": "181907042587ad04db1ab82f5ce55f50",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "We have emailed your password reset link."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify-email/{id}/{hash}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify user email",
                "description": "Mark the authenticated user's email address as verified.",
                "operationId": "f7f61c126ffd0a2551cd79cb79887b61",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Email verification hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "Expiration timestamp",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "description": "Signature for verification",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid verification link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid verification link."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Client": {
                "required": [
                    "id",
                    "user_id",
                    "bonus_balance",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier of the client",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "ID of the associated user",
                        "type": "integer"
                    },
                    "client_level_id": {
                        "description": "ID of the client's level",
                        "type": "integer",
                        "nullable": true
                    },
                    "bonus_balance": {
                        "description": "The bonus balance of the client",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Timestamp when the client was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the client was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Timestamp when the client was deleted, null if not deleted",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ClientLevel": {
                "required": [
                    "name",
                    "threshold",
                    "calculation_type",
                    "discount_percentage"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the client level",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the client level",
                        "type": "string"
                    },
                    "threshold": {
                        "description": "Threshold for the client level",
                        "type": "number",
                        "format": "float"
                    },
                    "calculation_type": {
                        "description": "Calculation type for the client level",
                        "type": "string",
                        "enum": [
                            "order_count",
                            "order_sum"
                        ]
                    },
                    "discount_percentage": {
                        "description": "Discount percentage for the client level",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "CostCategory": {
                "required": [
                    "id",
                    "name",
                    "type",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier of the cost category",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the cost category",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the cost category (e.g., 'Material', 'Labor', etc.)",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the cost category",
                        "type": "string",
                        "nullable": true
                    },
                    "is_active": {
                        "description": "Whether the cost category is active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Timestamp when the cost category was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the cost category was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Material": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "unit_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "simple",
                            "manufactured",
                            "composite"
                        ]
                    },
                    "default_unit_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "has_variants": {
                        "type": "boolean"
                    },
                    "allow_preorder": {
                        "type": "boolean"
                    },
                    "after_purchase_processing_time": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    }
                },
                "type": "object"
            },
            "ProductionBatch": {
                "required": [
                    "id",
                    "batch_number",
                    "recipe_id",
                    "product_variant_id",
                    "planned_quantity",
                    "status",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the production batch",
                        "type": "integer"
                    },
                    "batch_number": {
                        "description": "The batch number",
                        "type": "string"
                    },
                    "recipe_id": {
                        "description": "ID of the associated recipe",
                        "type": "integer"
                    },
                    "product_variant_id": {
                        "description": "ID of the associated product variant",
                        "type": "integer"
                    },
                    "planned_quantity": {
                        "description": "The planned quantity for the production batch",
                        "type": "number",
                        "format": "float"
                    },
                    "actual_quantity": {
                        "description": "The actual quantity produced",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "status": {
                        "description": "The status of the production batch",
                        "type": "string",
                        "enum": [
                            "planned",
                            "pending",
                            "in_progress",
                            "completed",
                            "cancelled",
                            "failed"
                        ]
                    },
                    "unit_cost": {
                        "description": "The unit cost of production",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "total_material_cost": {
                        "description": "The total cost of materials used in the production batch",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "additional_costs": {
                        "description": "Any additional costs for the production batch",
                        "type": "number",
                        "format": "float"
                    },
                    "planned_start_date": {
                        "description": "Planned start date for the production batch",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "planned_end_date": {
                        "description": "Planned end date for the production batch",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "started_at": {
                        "description": "Actual start date of the production batch",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "completed_at": {
                        "description": "Actual completion date of the production batch",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_by": {
                        "description": "ID of the user who created the production batch",
                        "type": "integer"
                    },
                    "completed_by": {
                        "description": "ID of the user who completed the production batch",
                        "type": "integer",
                        "nullable": true
                    },
                    "notes": {
                        "description": "Additional notes for the production batch",
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp when the production batch was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the production batch was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Timestamp when the production batch was deleted",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductionBatchCost": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "production_batch_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cost_category_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float"
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Recipe": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "output_quantity": {
                        "type": "number",
                        "format": "float"
                    },
                    "output_unit_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "instructions": {
                        "type": "string",
                        "nullable": true
                    },
                    "production_time": {
                        "type": "integer",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RecipeCostRate": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "recipe_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cost_category_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rate_per_unit": {
                        "type": "number",
                        "format": "float"
                    },
                    "fixed_rate": {
                        "type": "number",
                        "format": "float",
                        "default": 0
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "RecipeItem": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "recipe_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "component_type": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "component_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "float"
                    },
                    "unit_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "waste_percentage": {
                        "type": "number",
                        "format": "float",
                        "default": 0
                    },
                    "sort_order": {
                        "type": "integer",
                        "default": 0
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Unit": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "abbreviation": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "description": "Описание",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:00:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Clients",
            "description": "API для управления клиентами"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "ClientLevels",
            "description": "ClientLevels"
        },
        {
            "name": "Cost Categories",
            "description": "Cost Categories"
        },
        {
            "name": "Materials",
            "description": "Materials"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Product Variants",
            "description": "Product Variants"
        },
        {
            "name": "Production",
            "description": "Production"
        },
        {
            "name": "Promo Codes",
            "description": "Promo Codes"
        },
        {
            "name": "Recipes",
            "description": "Recipes"
        },
        {
            "name": "Units",
            "description": "Units"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}